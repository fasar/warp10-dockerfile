//
//   Copyright 2019-2021  SenX S.A.S.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//

//
// OSS Master Key, used to decrypt any 'wrapped:base64' key
// Valid formats are hex:... or base64:....
//
#oss.master.key = hex:hhhhhh...

//
// 128 bits SipHash key for verifying class names. Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.hash.class = hex:adfeadcadfb1dea2eca5f9841b0ad0b2

//
// 128 bits SipHash key for verifying labels. Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.hash.labels = hex:76d7bcdbb67f70b49e53f776fca75be7

//
// 128 bits SipHash key for verifying tokens. Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.hash.token = hex:5dd3cc71eb61c13a24bf3092dc0e2b22

//
// 128 bits SipHash key for verifying app names. Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.hash.app = hex:f36cee08fc3f5796ff595ffd9cd6aa23

//
// 128/192/256 bits AES key for protecting tokens.
// Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.aes.token = hex:dd1ef71152f49154681de7ed7ab2aa1b6d6115c9b3d7fe02ea193fe5960dab20

//
// 128/192/256 bits AES key for generating secure scripts.
// Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.aes.scripts = hex:60aab35a4257639bb4f046dbb6e420ba5edc637fbfc167c359b715e4ab2e0e30

//
// 128/192/256 bits AES key for wrapping metasets.
// Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.aes.metasets = hex:c4fe3252102993391d86bb0bdf54e47406aa319f511d1959be5b3cbca3698485

//
// 128/192/256 bits AES key for protecting log messages.
// Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
warp.aes.logging = hex:88685db2e7e8c02adda2e124f3604de683144b2aa3641786132605a633a9ddb4

//
// 128 bits SipHash key for signing fetch requests. Signed fetch request expose owner/producer.
// Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
//
#fetch.psk = hex:de1c9461df8741c203b95ec9a44e81e7

//
// Secret for REPORT, if unset, a random secret will be generated and output in the logs and on stdout
//
warp10.report.secret =hex:88685db2e7e8c02adda2e124f3604de683144b2aa3641786132605a633a9ddb4

//
// Manager secret, must be set to use the managing functions
//
#warp10.manager.secret =
